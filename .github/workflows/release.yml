name: Release

on:
  workflow_dispatch:
    inputs:
      bump:
        description: 'Part of version to bump (semver)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    name: Build and publish release
    runs-on: ubuntu-latest

    env:
      ARCHIVE_NAME: context-for-ai
      ARCHIVE_PATH: dist/context-for-ai
      ARCHIVE_FILE: dist/context-for-ai.tar.gz

    steps:
      - name: üßæ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üîç Get latest version tag
        id: get_tag
        run: |
          git fetch --tags
          LAST_TAG=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n1 || echo "v0.0.0")
          echo "tag=$LAST_TAG" >> $GITHUB_OUTPUT

      - name: üßÆ Compute next version
        id: next_tag
        run: |
          TAG="${{ steps.get_tag.outputs.tag }}"
          IFS='.' read -r MAJOR MINOR PATCH <<< "${TAG#v}"

          case "${{ github.event.inputs.bump }}" in
            major) MAJOR=$((MAJOR+1)); MINOR=0; PATCH=0 ;;
            minor) MINOR=$((MINOR+1)); PATCH=0 ;;
            patch|*) PATCH=$((PATCH+1)) ;;
          esac
          echo "tag=v$MAJOR.$MINOR.$PATCH" >> $GITHUB_OUTPUT

      - name: üè∑ Create and push tag
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "${{ steps.next_tag.outputs.tag }}"
          git remote set-url origin https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}.git
          git push origin "${{ steps.next_tag.outputs.tag }}"

      - name: üîß Verify binary exists
        run: test -f bin/context-for-ai

      - name: üì¶ Create release archive
        run: |
          chmod +x bin/context-for-ai
          mkdir -p ${{ env.ARCHIVE_PATH }}
          cp -r bin LICENSE README.md Formula install.sh ${{ env.ARCHIVE_PATH }}
          tar -czf ${{ env.ARCHIVE_FILE }} -C dist context-for-ai

      - name: üîê Compute SHA256
        id: sha
        run: |
          SHA=$(shasum -a 256 ${{ env.ARCHIVE_FILE }} | awk '{print $1}')
          echo "sha256=$SHA" >> "$GITHUB_OUTPUT"

      - name: üßæ Update Homebrew formula
        run: |
          sed "s|PUT_SHA256_HERE|${{ steps.sha.outputs.sha256 }}|g" Formula/context-for-ai.rb > dist/context-for-ai.rb

      - name: üìù Generate changelog
        run: |
          PREV="${{ steps.get_tag.outputs.tag }}"
          echo "## Changes in ${{ steps.next_tag.outputs.tag }}" > changelog.md
          echo >> changelog.md

          if git rev-parse "$PREV" >/dev/null 2>&1; then
            git log "$PREV"..HEAD --pretty=format:"- %s" >> changelog.md
          else
            git log --pretty=format:"- %s" >> changelog.md
          fi

      - name: üöÄ Publish GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.ARCHIVE_NAME }} ${{ steps.next_tag.outputs.tag }}
          tag_name: ${{ steps.next_tag.outputs.tag }}
          body_path: changelog.md
          files: |
            ${{ env.ARCHIVE_FILE }}
            dist/context-for-ai.rb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ‚òÅÔ∏è Push updated formula to Homebrew tap
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git clone https://x-access-token:${GH_PAT}@github.com/karle0wne/homebrew-tap.git
          cp dist/context-for-ai.rb homebrew-tap/Formula/context-for-ai.rb
          cd homebrew-tap
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Formula/context-for-ai.rb
          git commit -m "Update formula for context-for-ai ${{ steps.next_tag.outputs.tag }}"
          git push origin main
